//////////////////////////////////////////////////////////////////////
// This file was auto-generated by codelite's wxCrafter Plugin
// wxCrafter project file: gui.wxcp
// Do not modify this file by hand!
//////////////////////////////////////////////////////////////////////

#include "gui.h"


// Declare the bitmap loading function
extern void wxCraftereVcnHnInitBitmapResources();


namespace {
// return the wxBORDER_SIMPLE that matches the current application theme
wxBorder get_border_simple_theme_aware_bit() {
#if wxVERSION_NUMBER >= 3300 && defined(__WXMSW__)
    return wxSystemSettings::GetAppearance().IsDark() ? wxBORDER_SIMPLE : wxBORDER_STATIC;
#else
    return wxBORDER_DEFAULT;
#endif
} // DoGetBorderSimpleBit
bool bBitmapLoaded = false;
} // namespace


MainFrameBase::MainFrameBase(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style)
    : wxFrame(parent, id, title, pos, size, style)
{
    if ( !bBitmapLoaded ) {
        // We need to initialise the default bitmap handler
        wxXmlResource::Get()->AddHandler(new wxBitmapXmlHandler);
        wxCraftereVcnHnInitBitmapResources();
        bBitmapLoaded = true;
    }
    
    wxBoxSizer* mainSizer = new wxBoxSizer(wxVERTICAL);
    this->SetSizer(mainSizer);
    
    m_staticText1 = new wxStaticText(this, wxID_ANY, _("Div"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    
    mainSizer->Add(m_staticText1, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrl1 = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrl1->SetHint(wxT(""));
    #endif
    
    mainSizer->Add(m_textCtrl1, 0, wxALL, WXC_FROM_DIP(5));
    
    m_textCtrl2 = new wxTextCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    #if wxVERSION_NUMBER >= 3000
    m_textCtrl2->SetHint(wxT(""));
    #endif
    
    mainSizer->Add(m_textCtrl2, 0, wxALL, WXC_FROM_DIP(5));
    
    m_button1 = new wxButton(this, wxID_ANY, _T("Решить"), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    
    mainSizer->Add(m_button1, 0, wxALL, WXC_FROM_DIP(5));
    
    m_staticText2 = new wxStaticText(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDLG_UNIT(this, wxSize(-1, -1)), 0);
    
    mainSizer->Add(m_staticText2, 0, wxALL, WXC_FROM_DIP(5));
    
    SetName(wxT("MainFrameBase"));
    SetMinClientSize(wxSize(125,217));
    SetSize(wxDLG_UNIT(this, wxSize(125,217)));
    if (GetSizer()) {
         GetSizer()->Fit(this);
    }
    if(GetParent()) {
        CentreOnParent(wxBOTH);
    } else {
        CentreOnScreen(wxBOTH);
    }
    if(!wxPersistenceManager::Get().Find(this)) {
        wxPersistenceManager::Get().RegisterAndRestore(this);
    } else {
        wxPersistenceManager::Get().Restore(this);
    }
    // Connect events
    this->Bind(wxEVT_CLOSE_WINDOW, &MainFrameBase::OnCloseFrame, this);
    m_button1->Bind(wxEVT_COMMAND_BUTTON_CLICKED, &MainFrameBase::myClick, this);
    
}

MainFrameBase::~MainFrameBase()
{
    this->Unbind(wxEVT_CLOSE_WINDOW, &MainFrameBase::OnCloseFrame, this);
    m_button1->Unbind(wxEVT_COMMAND_BUTTON_CLICKED, &MainFrameBase::myClick, this);
    
}
